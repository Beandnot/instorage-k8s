// Code generated by MockGen. DO NOT EDIT.
// Source: inspur.com/storage/instorage-k8s/pkg/ssh (interfaces: IExecutor)

// Package mock_ssh is a generated GoMock package.
package mock_ssh

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIExecutor is a mock of IExecutor interface
type MockIExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockIExecutorMockRecorder
}

// MockIExecutorMockRecorder is the mock recorder for MockIExecutor
type MockIExecutorMockRecorder struct {
	mock *MockIExecutor
}

// NewMockIExecutor creates a new mock instance
func NewMockIExecutor(ctrl *gomock.Controller) *MockIExecutor {
	mock := &MockIExecutor{ctrl: ctrl}
	mock.recorder = &MockIExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIExecutor) EXPECT() *MockIExecutorMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockIExecutor) Execute(arg0 string) (string, string, int, error) {
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(int)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// Execute indicates an expected call of Execute
func (mr *MockIExecutorMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockIExecutor)(nil).Execute), arg0)
}
